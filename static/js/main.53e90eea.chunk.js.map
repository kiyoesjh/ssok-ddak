{"version":3,"sources":["styles/fonts/DancingScript-SemiBold.ttf","styles/fonts/RIDIBatang.otf","fbase.js","components/auth/AuthForm.js","components/auth/AuthSocialForm.js","routes/Auth.js","components/Layer/MorePop.jsx","styles/deviceSize.js","utils.js","components/Editor/TextArea.jsx","components/Button.jsx","components/Ssok/EditSsok.jsx","components/Ssok/Ssok.js","context.js","components/ThemeButton.jsx","components/Layer/SettingPop.jsx","components/Header.jsx","components/Container.jsx","skeletons/HomeSkeleton.jsx","routes/Home.js","components/Editor/FileButton.jsx","components/Editor/SDButton.jsx","category.js","components/Editor/RadioButton.jsx","components/Editor/SsokEditor.js","routes/Post.js","routes/ModalLayer.js","components/Profile/ProfileEditor.jsx","components/Profile/UserSsok.jsx","components/Profile/UserSsoks.jsx","routes/Profile.js","routes/ResultSearch.js","routes/Search.js","components/Navigation.js","components/Router.js","styles/GlobalStyles.js","styles/theme.js","components/RootWrap.js","reducer/themeReducer.js","components/App.js","index.js"],"names":["module","exports","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","FormWrapper","styled","div","InputBox","input","ActiveSubmit","ToggleButtonWrap","ToggleText","span","ToggleButton","button","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","target","name","value","onSubmit","event","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","SocialForm","ButtonWrap","Icon","FontAwesomeIcon","ButtonText","AuthSocialForm","onSocialClick","currentTarget","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faGoogle","faGithub","gradientKeyframes","keyframes","AuthWrap","TitleLogo","h1","FormWrap","Auth","MoreButton","theme","boldColor","Overlay","PopList","backgroundColor","boxShadow","MorePop","children","setIsOpen","isOpen","faEllipsisH","SIZE","device","mobile","tablet","laptop","laptopL","custom","size","NavigationResponseWidth","onFileChange","setAttachment","theFile","files","reader","FileReader","onloadend","finishedEvent","result","readAsDataURL","uploadFileURL","uid","attachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","onDelete","ssokData","window","confirm","doc","id","delete","attachmentURL","refFromURL","console","log","Container","lightColor","Textarea","textarea","TextArea","setSsok","ssok","height","setHeight","style","scrollHeight","maxLength","widthStyles","css","buttonWidth","StyledButton","mainColor","isFullButton","gap","Button","rest","ButtonStyle","EditSsok","setNewSsok","newSsok","toggleEditing","Wrap","UserInfoWrap","cardColor","UserInfo","UserPhoto","UserName","PostContent","Text","p","ImgText","PostText","PostWrap","PostImgWrap","PostImg","img","LayerButton","fontColor","IconText","EmptyDiv","borderColor","Ssok","isOwner","editing","setEditing","text","onSsokDelete","src","creatorPhoto","alt","creatorName","faTrashAlt","faEdit","update","createContext","ThemeButton","useContext","Context","state","dispatch","isDark","position","ButtonList","first","buttonListFirstChild","last","buttonListLastChild","LogoutButton","SettingPop","history","useHistory","logOutHandle","signOut","push","faCog","Head","h2","Header","headText","Wrapper","Card","Profile","UserProfile","Content","width","HomeSkeleton","map","n","key","ColumnWrap","Home","userObject","ssoks","setSsoks","useEffect","unsubscribe","collection","onSnapshot","snapshot","ssokArr","docs","data","length","creatorId","FileUploadLabel","label","FileUploadButton","FileButton","htmlFor","faImage","accept","SubmitButton","SDButton","isMousedown","setIsMousedown","onMouseDown","onMouseUp","tags","affirmation","empathy","lyrics","quotation","other","ListWrap","ul","List","li","tag","categoryColor","checked","RadioLabel","Radio","RadioButton","setCategory","category","e","Object","keys","Section","ButtonWrapper","ImgFilePreview","backgroundURL","CloseButton","TagWrap","SsokEditor","createdAt","Date","now","displayName","photoURL","add","val","faTimesCircle","Post","Modal","ChildrenWrap","ModalLayer","createPortal","goBack","document","getElementById","Form","form","NameInput","ProfileImgWrap","photo","Label","FileInput","SubmitInput","ProfileEditor","refreshUserObj","userName","setUserName","userPhoto","setUserPhoto","editObj","userInfo","ssokUserInfo","uploadURL","updateProfile","forEach","faPlus","ImgWrap","imgUrl","isAttachment","UserSsok","Boolean","UserSsoks","UserImg","strong","grayButtonStyle","ProfileEditButton","Link","url","useRouteMatch","getMySsoks","useCallback","where","orderBy","get","userSsoks","to","path","ResultSearch","filterData","setFilterData","useParams","searchCategory","categorySsok","filterArr","ListLink","Search","NavWrap","Nav","nav","NaviListWrap","NaviList","selected","NaviLink","LinkText","NaviText","ProfileWrap","Navigation","pathname","useLocation","faHome","fixedWidth","faSearch","faUser","AppRouter","isLoggedIn","exact","from","createGlobalStyle","reset","DancingScript","RIDIBatang","light","opacity","dark","RootWrap","themeReducer","action","App","init","setInit","setUserObject","useReducer","onAuthStateChanged","user","args","Provider","GlobalStyles","currentUser","ReactDOM","render"],"mappings":"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","file":"static/js/main.53e90eea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DancingScript-SemiBold.415dfbf4.ttf\";","module.exports = __webpack_public_path__ + \"static/media/RIDIBatang.d6425aff.otf\";","import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from 'react';\nimport { authService } from 'fbase';\nimport styled from 'styled-components';\n\nconst FormWrapper = styled.div`\n  width: 100%;\n`;\n\nconst InputBox = styled.input`\n  width: 100%;\n  height: 40px;\n  margin-bottom: 5px;\n  border: 1px solid #ccc;\n  color: #888;\n  padding: 0 8px;\n  border-radius: 3px;\n`;\n\nconst ActiveSubmit = styled.input`\n  width: 100%;\n  height: 40px;\n  background-color: #14274e;\n  text-align: center;\n  color: #fff;\n  border-radius: 3px;\n  margin-top: 15px;\n  cursor: pointer;\n`;\n\nconst ToggleButtonWrap = styled.div`\n  margin-top: 40px;\n  text-align: right;\n`;\n\nconst ToggleText = styled.span`\n  color: #aaa;\n  margin-right: 5px;\n`;\n\nconst ToggleButton = styled.button`\n  color: #000;\n  text-decoration: underline;\n`;\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(false);\n  const [error, setError] = useState('');\n\n  const onChange = ({ target: { name, value } }) => {\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        //계정만들기\n        await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        //로그인\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <FormWrapper>\n        <form onSubmit={onSubmit}>\n          <InputBox\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"이메일을 입력하세요\"\n            required\n            value={email}\n            onChange={onChange}\n          />\n          <InputBox\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"비밀번호를 입력하세요\"\n            required\n            value={password}\n            onChange={onChange}\n          />\n          <ActiveSubmit\n            type=\"submit\"\n            value={newAccount ? '회원가입' : '로그인'}\n          />\n        </form>\n        <ToggleButtonWrap>\n          <ToggleText>\n            {newAccount ? '이미 계정이 있으신가요?' : '아직 계정이 없으신가요?'}\n          </ToggleText>\n          <ToggleButton type=\"button\" onClick={toggleAccount}>\n            {newAccount ? '로그인' : '회원가입'}\n          </ToggleButton>\n        </ToggleButtonWrap>\n      </FormWrapper>\n      <p>{error}</p>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport { authService, firebaseInstance } from 'fbase';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\n\nconst SocialForm = styled.div`\n  display: flex;\n  margin-top: 20px;\n  padding: 20px 0 10px;\n  border-top: 1px solid #ccc;\n  justify-content: space-around;\n`;\n\nconst ButtonWrap = styled.button`\n  display: flex;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  font-size: 18px;\n`;\n\nconst ButtonText = styled.span`\n  margin-left: 5px;\n`;\n\nconst AuthSocialForm = () => {\n  const onSocialClick = async ({ currentTarget: { name } }) => {\n    let provider;\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <SocialForm>\n      <ButtonWrap type=\"button\" name=\"google\" onClick={onSocialClick}>\n        <Icon icon={faGoogle} />\n        <ButtonText>구글로 시작하기</ButtonText>\n      </ButtonWrap>\n      <ButtonWrap type=\"button\" name=\"github\" onClick={onSocialClick}>\n        <Icon icon={faGithub} />\n        <ButtonText>깃허브로 시작하기</ButtonText>\n      </ButtonWrap>\n    </SocialForm>\n  );\n};\n\nexport default AuthSocialForm;\n","import React from 'react';\nimport AuthForm from 'components/auth/AuthForm';\nimport styled, { keyframes } from 'styled-components';\nimport AuthSocialForm from 'components/auth/AuthSocialForm';\n\nconst gradientKeyframes = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`;\n\nconst AuthWrap = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);\n  background-size: 400% 400%;\n  animation: ${gradientKeyframes} 15s ease infinite;\n`;\n\nconst TitleLogo = styled.h1`\n  font-size: 50px;\n  text-align: center;\n  font-family: 'Dancing Script';\n  color: #000;\n`;\n\nconst FormWrap = styled.div`\n  width: 60%;\n  min-width: 300px;\n  max-width: 450px;\n  background-color: #eee;\n  border-radius: 4px;\n  margin-top: 30px;\n  padding: 20px;\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5);\n`;\n\nconst Auth = () => (\n  <AuthWrap>\n    <TitleLogo>ssok ddak</TitleLogo>\n    <FormWrap>\n      <AuthForm />\n      <AuthSocialForm />\n    </FormWrap>\n  </AuthWrap>\n);\n\nexport default Auth;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEllipsisH } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\n\nconst MoreButton = styled.button`\n  outline: none;\n  font-size: 20px;\n  color: ${({ theme }) => theme.boldColor};\n`;\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 98;\n`;\n\nconst PopList = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  min-width: 100px;\n  max-width: calc(295px);\n  top: 0;\n  right: 0;\n  background-color: ${({ theme }) => theme.backgroundColor};\n  border-radius: 5px;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n  z-index: 99;\n`;\n\nconst MorePop = ({ children, setIsOpen, isOpen }) => {\n  const togglePop = () => setIsOpen((prev) => !prev);\n  return (\n    <div>\n      <MoreButton onClick={togglePop}>\n        <FontAwesomeIcon icon={faEllipsisH} />\n      </MoreButton>\n      {isOpen && (\n        <>\n          <Overlay onClick={() => setIsOpen(false)} />\n          <PopList>{children}</PopList>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MorePop;\n","const SIZE = {\n  MOBILE: '480px',\n  TABLET: '768px',\n  LAPTOP: '1024px',\n  LAPTOP_LARGE: '1200px',\n};\n\nconst device = {\n  mobile: `@media (min-width: ${SIZE.MOBILE})`,\n  tablet: `@media (min-width: ${SIZE.TABLET})`,\n  laptop: `@media (min-width: ${SIZE.LAPTOP})`,\n  laptopL: `@media (min-width: ${SIZE.LAPTOP_LARGE})`,\n  custom: (size) => `@media (min-width: ${size})`,\n};\n\nexport const NavigationResponseWidth = `\n${device.tablet} {\n  width: 110px;\n}\n${device.laptop} {\n  width: 200px;\n}\n`;\n\nexport default device;\n","import { storageService, dbService } from 'fbase';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const onFileChange = ({ target: { files } }, setAttachment) => {\n  const theFile = files[0];\n  const reader = new FileReader();\n  reader.onloadend = (finishedEvent) => {\n    const {\n      currentTarget: { result },\n    } = finishedEvent;\n    setAttachment(result);\n  };\n  reader.readAsDataURL(theFile);\n};\n\nexport const uploadFileURL = async (uid, attachment) => {\n  const attachmentRef = storageService.ref().child(`${uid}/${uuidv4()}`);\n  const response = await attachmentRef.putString(attachment, 'data_url');\n  return await response.ref.getDownloadURL();\n};\n\nexport const onDelete = async (ssokData) => {\n  const ok = window.confirm('삭제하시겠습니까?');\n  if (ok) {\n    try {\n      await dbService.doc(`ssok/${ssokData.id}`).delete(); //doc(경로) => collection 안에 document 가 있기 때문에 'collection이름/document 아이디'로 작성\n      if (!ssokData.attachmentURL) return;\n      await storageService.refFromURL(ssokData.attachmentURL).delete(); //refFromURL => 입력받은 url을 firebase 가 storage 안에서 url reference 를 찾아 그 reference로 리턴하는 method\n      console.log('성공!');\n    } catch {\n      console.log('삭제 도중 에러 발생했습니다.');\n    }\n  }\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  background-color: ${({ theme }) => theme.lightColor};\n  flex: 1;\n`;\n\nconst Textarea = styled.textarea`\n  display: block;\n  width: 100%;\n  min-height: 240px;\n  resize: none;\n  padding: 10px;\n  font-size: 1rem;\n  background: none;\n  color: ${({ theme }) => theme.boldColor};\n  &::placeholder {\n    color: ${({ theme }) => theme.boldColor};\n    opacity: 0.8;\n  }\n`;\n\nconst TextArea = ({ setSsok, ssok }) => {\n  const [height, setHeight] = useState();\n  const onChange = ({ target }) => {\n    const { value, scrollHeight } = target;\n    setSsok(value);\n    setHeight(scrollHeight);\n  };\n  const style = {\n    height: `${height}px`,\n  };\n  return (\n    <Container>\n      <Textarea\n        onChange={onChange}\n        value={ssok}\n        placeholder=\"적고 싶은 글이나 기억하고 싶은 글을 적어보세요.\"\n        maxLength={300}\n        style={style}\n      />\n    </Container>\n  );\n};\n\nexport default TextArea;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst widthStyles = css`\n  width: ${({ buttonWidth }) => buttonWidth};\n`;\n\nconst StyledButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 30px;\n  color: ${({ theme }) => theme.mainColor(1)};\n  border: 1px solid ${({ theme }) => theme.mainColor(1)};\n  ${({ isFullButton, theme }) =>\n    isFullButton &&\n    `\n      background-color: ${theme.mainColor(1)};\n      color: #fff;\n    `};\n  transition: 0.3s;\n  ${({ gap }) => gap && `margin: ${gap}`};\n  ${widthStyles};\n`;\n\nconst Button = ({ children, buttonWidth, isFullButton, gap, ...rest }) => {\n  return (\n    <StyledButton\n      buttonWidth={buttonWidth}\n      isFullButton={isFullButton}\n      gap={gap}\n      {...rest}\n    >\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\nimport TextArea from 'components/Editor/TextArea';\nimport Button from 'components/Button';\n\nconst ButtonWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin: 5px 0;\n`;\n\nconst ButtonStyle = styled.button`\n  width: 100%;\n  height: 100%;\n  color: inherit;\n  padding: 5px;\n`;\n\nconst EditSsok = ({ onSubmit, setNewSsok, newSsok, toggleEditing }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <TextArea setSsok={setNewSsok} ssok={newSsok} />\n      <ButtonWrap>\n        <Button buttonWidth=\"100px\" isFullButton={false} gap=\"0 5px\">\n          <ButtonStyle type=\"button\" onClick={toggleEditing}>\n            취소\n          </ButtonStyle>\n        </Button>\n        <Button buttonWidth=\"100px\" isFullButton={true}>\n          <ButtonStyle type=\"submit\">완료</ButtonStyle>\n        </Button>\n      </ButtonWrap>\n    </form>\n  );\n};\n\nexport default EditSsok;\n","import { dbService, storageService } from 'fbase';\nimport React, { useState } from 'react';\nimport { faEdit, faTrashAlt } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styled from 'styled-components';\nimport MorePop from '../Layer/MorePop.jsx';\nimport device from 'styles/deviceSize';\nimport { onDelete } from 'utils.js';\nimport EditSsok from './EditSsok.jsx';\n\nconst Wrap = styled.div`\n  position: relative;\n  width: 100%;\n  margin: 0 auto 15px;\n  break-inside: avoid;\n`;\n\nconst UserInfoWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  height: 50px;\n  border-bottom: 0;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  padding: 10px;\n  background-color: ${({ theme }) => theme.cardColor};\n`;\n\nconst UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst UserPhoto = styled.div`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  overflow: hidden;\n  > img {\n    width: 100%;\n    height: auto;\n  }\n`;\n\nconst UserName = styled.div`\n  margin-left: 10px;\n  color: ${({ theme }) => theme.boldColor};\n`;\n\nconst PostContent = styled.div`\n  position: relative;\n`;\n\nconst Text = styled.p`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  white-space: pre-wrap;\n  word-break: break-word;\n  font-family: 'RIDIBatang';\n  text-align: center;\n  line-height: 1.5;\n  ${device.tablet} {\n    font-size: 1.2rem;\n  }\n  ${device.laptop} {\n    font-size: 0.95rem;\n  }\n`;\n\nconst ImgText = styled(Text)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  align-items: center;\n  padding: 0 10px;\n  color: #fff;\n  z-index: 10;\n`;\n\nconst PostText = styled(Text)`\n  align-items: flex-start;\n  padding: 30px 10px;\n  color: ${({ theme }) => theme.boldColor};\n`;\n\nconst PostWrap = styled.div`\n  overflow: hidden;\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n`;\n\nconst PostImgWrap = styled(PostWrap)`\n  position: relative;\n  &:after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.3);\n    content: '';\n  }\n`;\n\nconst PostImg = styled.img`\n  display: block;\n  width: 100%;\n  height: auto;\n`;\n\nconst LayerButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 10px;\n  color: ${({ theme }) => theme.fontColor};\n  &:hover {\n    background-color: ${({ theme }) => theme.lightColor};\n  }\n`;\n\nconst IconText = styled.span`\n  padding-left: 8px;\n  color: ${({ theme }) => theme.fontColor};\n`;\n\nconst EmptyDiv = styled(PostWrap)`\n  width: 100%;\n  min-height: 100px;\n  border-top: 1px solid ${({ theme }) => theme.borderColor};\n  background-color: ${({ theme }) => theme.cardColor};\n`;\n\nconst Ssok = ({ ssokData, isOwner }) => {\n  const [editing, setEditing] = useState(false); //수정하고 있는지 아닌지에 대한 상태\n  const [newSsok, setNewSsok] = useState(ssokData.text); //input값을 수정할 수 있는 상태값, 초기값=수정하기 전에 있던 텍스트\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onSsokDelete = async () => await onDelete(ssokData);\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n    setIsOpen(false);\n  };\n  const onSubmit = (event) => {\n    event.preventDefault();\n    try {\n      dbService.doc(`ssok/${ssokData.id}`).update({\n        text: newSsok,\n      });\n    } catch {}\n    setEditing(false);\n  };\n  return (\n    <Wrap>\n      <UserInfoWrap>\n        <UserInfo>\n          <UserPhoto>\n            <img src={ssokData.creatorPhoto} alt=\"배경이미지\" />\n          </UserPhoto>\n          <UserName>{ssokData.creatorName}</UserName>\n        </UserInfo>\n        {isOwner && ( //글쓴 사람일 경우에만 수정, 삭제 버튼이 보일 수 있도록 체크\n          <>\n            <MorePop setIsOpen={setIsOpen} isOpen={isOpen}>\n              <LayerButton type=\"button\" onClick={onSsokDelete}>\n                <FontAwesomeIcon icon={faTrashAlt} />\n                <IconText>삭제하기</IconText>\n              </LayerButton>\n              <LayerButton type=\"button\" onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faEdit} />\n                <IconText>수정하기</IconText>\n              </LayerButton>\n            </MorePop>\n          </>\n        )}\n      </UserInfoWrap>\n      <PostContent>\n        {editing ? ( //수정하기를 눌렀다면? 폼이 나오게 된다.\n          <EditSsok\n            onSubmit={onSubmit}\n            setNewSsok={setNewSsok}\n            newSsok={newSsok}\n            toggleEditing={toggleEditing}\n          />\n        ) : (\n          <>\n            {ssokData.attachmentURL ? (\n              <>\n                <ImgText>{ssokData.text}</ImgText>\n                <PostImgWrap>\n                  <PostImg src={ssokData.attachmentURL} />\n                </PostImgWrap>\n              </>\n            ) : (\n              <EmptyDiv>\n                <PostText>{ssokData.text}</PostText>\n              </EmptyDiv>\n            )}\n          </>\n        )}\n      </PostContent>\n    </Wrap>\n  );\n};\n\nexport default Ssok;\n","import { createContext } from 'react';\n\nexport default createContext(null);\n","import React, { useContext } from 'react';\nimport Context from 'context';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  display: block;\n  width: 100%;\n  height: 100%;\n  outline: none;\n  padding: 15px;\n  color: inherit;\n`;\n\nconst ThemeButton = ({ setIsOpen }) => {\n  const { state, dispatch } = useContext(Context);\n\n  const handleToggleClick = () => {\n    dispatch({ type: 'TOGGLE_DARK_MODE' });\n    setIsOpen(false);\n  };\n  return (\n    <>\n      <Button type=\"button\" onClick={handleToggleClick}>\n        {state.isDark ? '라이트모드' : '다크모드'}로 변경하기\n      </Button>\n    </>\n  );\n};\n\nexport default ThemeButton;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { authService } from 'fbase';\nimport styled, { css } from 'styled-components';\nimport ThemeButton from 'components/ThemeButton';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport { useState } from 'react';\nimport device from 'styles/deviceSize';\n\nconst Wrap = styled.div`\n  display: flex;\n  position: relative;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  margin: 10px 0;\n`;\n\nconst MoreButton = styled.button`\n  display: flex;\n  width: 100%;\n  padding: 10px 0;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  font-size: 1.7rem;\n  color: ${({ theme }) => theme.boldColor};\n`;\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 98;\n`;\n\nconst PopList = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  width: 210px;\n  ${({ position }) => position};\n  border-radius: 5px;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n  z-index: 99;\n  ${device.tablet} {\n    margin: 10px 0;\n    &:before {\n      position: absolute;\n      width: 10px;\n      height: 10px;\n      bottom: -5px;\n      left: 50px;\n      background-color: ${({ theme }) => theme.backgroundColor};\n      transform: rotate(45deg) translate(-50%, 50%);\n      box-shadow: ${({ theme }) => theme.boxShadow};\n      z-index: -1;\n      content: '';\n    }\n  }\n  ${device.laptop} {\n    &:before {\n      left: 50%;\n    }\n  }\n`;\n\nconst ButtonList = styled.div`\n  width: 100%;\n  border-top: 1px solid ${({ theme }) => theme.borderColor};\n  background-color: ${({ theme }) => theme.backgroundColor};\n  color: ${({ theme }) => theme.boldColor};\n  ${({ first }) => first && buttonListFirstChild};\n  ${({ last }) => last && buttonListLastChild};\n`;\n\nconst buttonListFirstChild = css`\n  border: none;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\nconst buttonListLastChild = css`\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n`;\n\nconst LogoutButton = styled.button`\n  display: block;\n  width: 100%;\n  height: 100%;\n  outline: none;\n  padding: 15px;\n  color: inherit;\n`;\n\nconst SettingPop = ({ children, position }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const history = useHistory();\n  const togglePop = () => setIsOpen((prev) => !prev);\n\n  const logOutHandle = async () => {\n    await authService.signOut();\n    history.push('/');\n  };\n\n  return (\n    <Wrap>\n      <MoreButton onClick={togglePop}>\n        <FontAwesomeIcon icon={faCog} />\n        {children}\n      </MoreButton>\n      {isOpen && (\n        <>\n          <Overlay onClick={() => setIsOpen(false)} />\n          <PopList position={position}>\n            <ButtonList first>\n              <ThemeButton setIsOpen={setIsOpen} />\n            </ButtonList>\n            <ButtonList last>\n              <LogoutButton type=\"button\" onClick={logOutHandle}>\n                계정에서 로그아웃\n              </LogoutButton>\n            </ButtonList>\n          </PopList>\n        </>\n      )}\n    </Wrap>\n  );\n};\n\nexport default SettingPop;\n","import React from 'react';\nimport styled from 'styled-components';\nimport device from 'styles/deviceSize';\nimport SettingPop from './Layer/SettingPop';\n\nconst Container = styled.div`\n  position: sticky;\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  top: 0;\n  height: 50px;\n  min-height: 50px;\n  padding: 0 15px;\n  border-bottom: 1px solid ${({ theme }) => theme.borderColor};\n  background-color: ${({ theme }) => theme.backgroundColor};\n  z-index: 90;\n`;\n\nconst Head = styled.h2`\n  font-size: 1.25rem;\n  color: ${({ theme }) => theme.boldColor};\n`;\n\nconst ButtonWrap = styled.div`\n  display: block;\n  ${device.tablet} {\n    display: none;\n  }\n`;\n\nconst Header = ({ headText }) => {\n  return (\n    <Container>\n      <Head>{headText}</Head>\n      <ButtonWrap>\n        <SettingPop position={`top: 5px; right: 0;`} />\n      </ButtonWrap>\n    </Container>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\nimport device from 'styles/deviceSize';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex: 1;\n  width: 100%;\n  min-height: 100%;\n  flex-direction: column;\n  ${device.tablet} {\n    border-left: 1px solid ${({ theme }) => theme.borderColor};\n  }\n`;\n\nconst Container = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n\nexport default Container;\n","import React from 'react';\nimport styled from 'styled-components';\nimport device from 'styles/deviceSize';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-template-rows: repeat(auto-fill, minmax(300px, auto));\n  grid-auto-rows: minmax(300px, auto);\n  gap: 10px;\n  max-width: 1000px;\n  margin: 0 auto 50px;\n  padding: 15px 10px;\n  width: 100%;\n  ${device.mobile} {\n    width: 80%;\n  }\n  ${device.laptop} {\n    padding: 50px 10px;\n    margin: 0 auto;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(auto-fill, minmax(200px, auto));\n    grid-auto-rows: minmax(200px, auto);\n  }\n`;\n\nconst Card = styled.div`\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.cardColor};\n`;\n\nconst Profile = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  height: 50px;\n  padding: 10px;\n  border-bottom: 1px solid ${({ theme }) => theme.borderColor};\n`;\n\nconst UserProfile = styled.div`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.borderColor};\n`;\n\nconst UserName = styled.span`\n  width: 60px;\n  height: 20px;\n  margin-left: 10px;\n  background-color: ${({ theme }) => theme.borderColor};\n`;\n\nconst Content = styled.div`\n  display: flex;\n  height: calc(100% - 50px);\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  width: ${({ width }) => width};\n  height: 20px;\n  background-color: ${({ theme }) => theme.borderColor};\n  margin: 5px 0;\n`;\n\nconst HomeSkeleton = () => {\n  const cardArr = [0, 1, 2, 3, 4, 5];\n  return (\n    <Container>\n      {cardArr.map((n) => (\n        <Card key={n}>\n          <Profile>\n            <UserProfile />\n            <UserName />\n          </Profile>\n          <Content>\n            <Text width=\"80%\" />\n            <Text width=\"60%\" />\n          </Content>\n        </Card>\n      ))}\n    </Container>\n  );\n};\n\nexport default HomeSkeleton;\n","import React, { useEffect, useState } from 'react';\nimport { dbService } from 'fbase';\nimport Ssok from 'components/Ssok/Ssok';\nimport styled from 'styled-components';\nimport device from 'styles/deviceSize';\nimport Header from 'components/Header';\nimport Container from 'components/Container';\nimport HomeSkeleton from 'skeletons/HomeSkeleton';\n\nconst ColumnWrap = styled.div`\n  width: 100%;\n`;\n\nconst Wrap = styled.div`\n  max-width: 1000px;\n  margin: 0 auto 50px;\n  padding: 15px 10px;\n  ${device.mobile} {\n    width: 80%;\n  }\n  ${device.tablet} {\n    columns: unset;\n    padding: 50px 10px;\n    margin: 0 auto;\n  }\n  ${device.laptop} {\n    width: 100%;\n    column-count: 3;\n    column-gap: 15px;\n  }\n`;\n\nconst Home = ({ userObject }) => {\n  const [ssoks, setSsoks] = useState([]);\n\n  useEffect(() => {\n    const unsubscribe = dbService.collection('ssok').onSnapshot((snapshot) => {\n      const ssokArr = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setSsoks(ssokArr);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <Header headText=\"홈\" />\n        <ColumnWrap>\n          {ssoks.length ? (\n            <Wrap>\n              {ssoks.map((ssok) => (\n                <Ssok\n                  key={ssok.id}\n                  ssokData={ssok}\n                  isOwner={ssok.creatorId === userObject.uid}\n                />\n              ))}\n            </Wrap>\n          ) : (\n            <HomeSkeleton />\n          )}\n        </ColumnWrap>\n      </Container>\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImage } from '@fortawesome/free-regular-svg-icons';\n\nconst FileUploadLabel = styled.label`\n  font-size: 1.75rem;\n  width: 45px;\n  height: 45px;\n  margin: 0 10px;\n  padding: 10px;\n  color: ${({ theme }) => theme.mainColor(1)};\n  background-color: ${({ theme }) => theme.mainColor(0.1)};\n  cursor: pointer;\n  border-radius: 50%;\n  &:hover {\n    color: ${({ theme }) => theme.mainColor(0.5)};\n  }\n`;\n\nconst FileUploadButton = styled.input`\n  position: absolute;\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  z-index: -1;\n`;\n\nconst FileButton = ({ onFileChange, setAttachment }) => {\n  return (\n    <>\n      <FileUploadLabel htmlFor=\"file_upload\">\n        <FontAwesomeIcon icon={faImage} />\n      </FileUploadLabel>\n      <FileUploadButton\n        id=\"file_upload\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={(event) => onFileChange(event, setAttachment)}\n      />\n    </>\n  );\n};\n\nexport default FileButton;\n","import React, { useState } from 'react';\nimport Button from 'components/Button';\nimport styled from 'styled-components';\n\nconst SubmitButton = styled.input`\n  width: 100%;\n  height: 100%;\n  color: inherit;\n  outline: none;\n  font-size: 1.2rem;\n`;\n\nconst SDButton = () => {\n  const [isMousedown, setIsMousedown] = useState(false);\n  const onDown = () => setIsMousedown(true);\n  const onUp = () => setIsMousedown(false);\n\n  return (\n    <Button buttonWidth=\"100px\" isFullButton={true}>\n      <SubmitButton\n        type=\"submit\"\n        value={isMousedown ? '딱' : '쏙'}\n        onMouseDown={onDown}\n        onMouseUp={onUp}\n      />\n    </Button>\n  );\n};\n\nexport default SDButton;\n","// const tags = [\n//   ['affirmation', '확언'],\n//   ['empathy', '공감'],\n//   ['lyrics', '가사'],\n//   ['quotation', '구절'],\n//   ['other', '기타'],\n// ];\n\nconst tags = {\n  affirmation: '확언',\n  empathy: '공감',\n  lyrics: '가사',\n  quotation: '구절',\n  other: '기타',\n};\n\nexport default tags;\n","import React from 'react';\nimport styled from 'styled-components';\nimport tags from 'category';\n\nconst ListWrap = styled.ul`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst List = styled.li`\n  background-color: ${({ theme, tag }) => theme.categoryColor[tag]};\n  color: #fff;\n  transition: all 0.2s;\n  opacity: ${({ checked }) => (checked ? `1` : `0.4`)};\n  border-radius: 5px;\n`;\n\nconst RadioLabel = styled.label`\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 100%;\n  padding: 15px;\n  font-size: 1.3rem;\n  cursor: pointer;\n`;\n\nconst Radio = styled.input`\n  position: absolute;\n  opacity: 0;\n  filter: opacity(0);\n  width: 0.1px;\n  height: 0.1px;\n`;\n\nconst RadioButton = ({ setCategory, category }) => {\n  const onChange = (e) => {\n    setCategory(e.target.value);\n  };\n\n  return (\n    <ListWrap>\n      {Object.keys(tags).map((tag) => (\n        <List key={tag} tag={tag} checked={category === tag}>\n          <RadioLabel htmlFor={tag}>\n            <Radio\n              type=\"radio\"\n              id={tag}\n              value={tag}\n              name=\"tag\"\n              onChange={onChange}\n              checked={category === tag}\n            />\n            <span>{tags[tag]}</span>\n          </RadioLabel>\n        </List>\n      ))}\n    </ListWrap>\n  );\n};\n\nexport default RadioButton;\n","import { dbService } from 'fbase';\nimport React, { useState } from 'react';\nimport FileButton from './FileButton';\nimport SDButton from './SDButton';\nimport TextArea from './TextArea';\nimport styled from 'styled-components';\nimport { onFileChange, uploadFileURL } from 'utils';\nimport RadioButton from './RadioButton';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst Section = styled.div`\n  width: 80%;\n  height: 100%;\n  margin: 50px auto;\n  max-width: 980px;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  margin: 10px 0;\n  justify-content: flex-end;\n`;\n\nconst ImgFilePreview = styled.div`\n  display: flex;\n  width: 100%;\n  height: 50%;\n  margin: 20px auto;\n  background-image: url(${({ backgroundURL }) => backgroundURL});\n  background-repeat: no-repeat;\n  background-size: 100% auto;\n  align-items: flex-start;\n  justify-content: flex-end;\n`;\n\nconst CloseButton = styled.button`\n  display: flex;\n  width: 45px;\n  height: 45px;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: rgba(0, 0, 0, 0.8);\n  font-size: 2rem;\n`;\n\nconst TagWrap = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n`;\n\nconst SsokEditor = ({ userObject }) => {\n  const [ssok, setSsok] = useState('');\n  const [attachment, setAttachment] = useState('');\n  const [category, setCategory] = useState('other');\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (!ssok) return;\n    let attachmentURL = '';\n    if (attachment) {\n      attachmentURL = await uploadFileURL(userObject.uid, attachment);\n    }\n    const ssokData = {\n      text: ssok,\n      createdAt: Date.now(),\n      creatorId: userObject.uid,\n      creatorName: userObject.displayName,\n      creatorPhoto: userObject.photoURL,\n      attachmentURL,\n      category,\n    };\n    await dbService.collection('ssok').add(ssokData);\n    setSsok('');\n    setAttachment('');\n  };\n\n  const onClearAttachment = () => setAttachment(null);\n\n  return (\n    <Section>\n      <form onSubmit={onSubmit}>\n        <TagWrap>\n          <RadioButton setCategory={setCategory} category={category} />\n          <TextArea setSsok={(val) => setSsok(val)} ssok={ssok} />\n        </TagWrap>\n        <ButtonWrapper>\n          <FileButton\n            onFileChange={onFileChange}\n            setAttachment={setAttachment}\n          />\n          <SDButton />\n        </ButtonWrapper>\n      </form>\n      {attachment && (\n        <ImgFilePreview backgroundURL={attachment}>\n          <CloseButton type=\"button\" onClick={onClearAttachment}>\n            <FontAwesomeIcon icon={faTimesCircle} />\n          </CloseButton>\n        </ImgFilePreview>\n      )}\n    </Section>\n  );\n};\n\nexport default SsokEditor;\n","import React from 'react';\nimport SsokEditor from 'components/Editor/SsokEditor';\nimport Header from 'components/Header';\nimport Container from 'components/Container';\n\nconst Post = ({ userObject }) => {\n  return (\n    <Container>\n      <Header headText=\"글쓰기\" />\n      <SsokEditor userObject={userObject} />\n    </Container>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { useHistory } from 'react-router-dom';\n\nconst Modal = styled.div`\n  position: fixed;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  top: 0px;\n  left: 0px;\n  bottom: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 101;\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.25);\n`;\n\nconst ChildrenWrap = styled.div`\n  position: relative;\n  z-index: 102;\n  width: 50%;\n  height: auto;\n  min-height: 100px;\n  background-color: #fff;\n  border-radius: 5px;\n  padding: 10px;\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 30px;\n  height: 30px;\n  font-size: 1.5rem;\n  color: ${({ theme }) => theme.mainColor(0.8)};\n  &:hover {\n    color: ${({ theme }) => theme.mainColor(1)};\n  }\n`;\n\nconst ModalLayer = ({ children, onClick }) => {\n  const history = useHistory();\n  const onCloseLayer = () => history.goBack();\n  return createPortal(\n    <Modal>\n      <Overlay onClick={onClick} />\n      <ChildrenWrap>\n        {children}\n        <CloseButton type=\"button\" onClick={onCloseLayer}>\n          <FontAwesomeIcon icon={faTimesCircle} />\n        </CloseButton>\n      </ChildrenWrap>\n    </Modal>,\n    document.getElementById('modal_root')\n  );\n};\n\nexport default ModalLayer;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { onFileChange, uploadFileURL } from 'utils';\nimport { dbService, storageService } from 'fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport Button from 'components/Button';\n\nconst Wrap = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst NameInput = styled.input`\n  width: 100%;\n  padding: 10px;\n  background-color: #eee;\n  line-height: 1.5;\n  margin: 20px 0;\n  border-radius: 5px;\n`;\n\nconst ProfileImgWrap = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 150px;\n  height: 150px;\n  overflow: hidden;\n  margin: 0 auto;\n  border-radius: 50%;\n  background: #eee no-repeat center;\n  background-image: ${({ photo }) => `url(${photo})`};\n  background-size: 100% auto;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  font-size: 1.5rem;\n  color: #fff;\n  background-color: rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n  border-radius: 50%;\n`;\n\nconst FileInput = styled.input`\n  position: absolute;\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  z-index: -1;\n`;\n\nconst SubmitInput = styled.input`\n  width: 100%;\n  padding: 10px;\n  color: #fff;\n`;\n\nconst ProfileEditor = ({ refreshUserObj, userObject, ssoks }) => {\n  const [userName, setUserName] = useState(userObject.displayName);\n  const [userPhoto, setUserPhoto] = useState('');\n  const history = useHistory();\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObject.displayName === userName && !userPhoto) return;\n    //user info update,\n    //db ssok 에 있는 user info update\n    const editObj = {\n      userInfo: {},\n      ssokUserInfo: {},\n    };\n    if (userObject.displayName !== userName) {\n      editObj.userInfo['displayName'] = userName;\n      editObj.ssokUserInfo['creatorName'] = userName;\n    }\n    if (userPhoto) {\n      await storageService.refFromURL(userObject.photoURL).delete();\n      const uploadURL = await uploadFileURL(userObject.uid, userPhoto);\n      editObj.userInfo['photoURL'] = uploadURL;\n      editObj.ssokUserInfo['creatorPhoto'] = uploadURL;\n    }\n    await userObject.updateProfile(editObj.userInfo); //user정보 업데이트\n    ssoks.forEach((ssok) => {\n      //db정보 업데이트\n      dbService.doc(`ssok/${ssok.id}`).update(editObj.ssokUserInfo);\n    });\n    refreshUserObj();\n    setUserPhoto('');\n    history.push('/profile');\n  };\n\n  const onChange = ({ target: { value } }) => {\n    setUserName(value);\n  };\n\n  return (\n    <Wrap>\n      <Form onSubmit={onSubmit}>\n        <ProfileImgWrap photo={userPhoto || userObject.photoURL}>\n          <Label htmlFor=\"file_upload\">\n            <FontAwesomeIcon icon={faPlus} />\n          </Label>\n          <FileInput\n            id=\"file_upload\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={(event) => onFileChange(event, setUserPhoto)}\n          />\n        </ProfileImgWrap>\n        <NameInput\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={userName}\n          onChange={onChange}\n        />\n        <Button buttonWidth=\"100%\" isFullButton={true}>\n          <SubmitInput type=\"submit\" value=\"Update\" />\n        </Button>\n      </Form>\n    </Wrap>\n  );\n};\n\nexport default ProfileEditor;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst ImgWrap = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  ${({ imgUrl, theme }) =>\n    imgUrl\n      ? `\n    background-image: url(${imgUrl});\n    &:after {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0,0,0,0.3);\n      content: \"\";\n    }`\n      : `\n    background-color: ${theme.cardColor};\n  `}\n`;\n\nconst Text = styled.p`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  padding: 20px 10px;\n  color: ${({ isAttachment, theme }) =>\n    isAttachment ? '#fff' : `${theme.boldColor}`};\n  line-height: 1.5;\n  white-space: pre-wrap;\n  word-break: break-word;\n  font-family: 'RIDIBatang';\n  text-align: center;\n  z-index: 5;\n`;\n\nconst UserSsok = ({ ssok }) => {\n  const { attachmentURL } = ssok;\n  return (\n    <Container>\n      <ImgWrap imgUrl={attachmentURL} />\n      <Text isAttachment={Boolean(attachmentURL)}>{ssok.text}</Text>\n    </Container>\n  );\n};\n\nexport default UserSsok;\n","import React from 'react';\nimport styled from 'styled-components';\nimport device from 'styles/deviceSize';\nimport UserSsok from './UserSsok';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-template-rows: repeat(auto-fill, minmax(200px, auto));\n  grid-auto-rows: minmax(200px, auto);\n  gap: 10px;\n  margin: 20px 0;\n  ${device.custom('630px')} {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n\nconst UserSsoks = ({ ssoks }) => {\n  return (\n    <Container>\n      {ssoks.map((ssok) => (\n        <UserSsok ssok={ssok} key={ssok.id} />\n      ))}\n    </Container>\n  );\n};\n\nexport default UserSsoks;\n","import Container from 'components/Container';\nimport Header from 'components/Header';\nimport ModalLayer from 'routes/ModalLayer';\nimport ProfileEditor from 'components/Profile/ProfileEditor';\nimport { dbService } from 'fbase';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Link, Route, useHistory, useRouteMatch } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport UserSsoks from 'components/Profile/UserSsoks';\n\nconst Wrap = styled.div`\n  width: 100%;\n  max-width: 1000px;\n  margin: 50px auto;\n`;\n\nconst UserInfoWrap = styled.div`\n  display: flex;\n  align-items: flex-end;\n  width: 90%;\n  margin: 0 auto;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\nconst UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst UserPhoto = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 150px;\n  height: 150px;\n  margin: 0 auto;\n  border-radius: 50%;\n  overflow: hidden;\n`;\n\nconst UserImg = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nconst UserName = styled.strong`\n  font-size: 1.6rem;\n  color: ${({ theme }) => theme.fontColor};\n  display: block;\n  margin: 0 40px;\n`;\n\nconst Content = styled.div`\n  width: 90%;\n  margin: 0 auto;\n  min-height: 400px;\n  padding-top: 30px;\n  border-top: 1px solid ${({ theme }) => theme.borderColor};\n`;\n\nconst ButtonWrap = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst grayButtonStyle = css`\n  display: block;\n  padding: 10px;\n  /* background-color: ${({ theme }) => theme.lightColor}; */\n  border: 1px solid ${({ theme }) => theme.mainColor(1)};\n  border-radius: 30px;\n  color: ${({ theme }) => theme.mainColor(1)};\n`;\n\nconst ProfileEditButton = styled(Link)`\n  ${grayButtonStyle}\n`;\n\nconst Profile = ({ userObject, refreshUserObj }) => {\n  const [ssoks, setSsoks] = useState([]);\n  const history = useHistory();\n  const { url } = useRouteMatch();\n\n  const getMySsoks = useCallback(async () => {\n    const userSsoks = await dbService\n      .collection('ssok')\n      .where('creatorId', '==', userObject.uid)\n      .orderBy('createdAt')\n      .get();\n    const ssokArr = userSsoks.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data(),\n    }));\n    setSsoks(ssokArr);\n  }, [userObject]);\n\n  useEffect(() => {\n    getMySsoks();\n  }, [getMySsoks]);\n\n  return (\n    <>\n      <Container>\n        <Header headText={userObject.displayName} />\n        <Wrap>\n          <UserInfoWrap>\n            <UserInfo>\n              <UserPhoto>\n                <UserImg src={userObject.photoURL} />\n              </UserPhoto>\n              <UserName>{userObject.displayName}</UserName>\n            </UserInfo>\n            <ButtonWrap>\n              <ProfileEditButton to={`${url}/edit`}>\n                프로필 수정\n              </ProfileEditButton>\n            </ButtonWrap>\n          </UserInfoWrap>\n          <Content>{ssoks && <UserSsoks ssoks={ssoks} />}</Content>\n        </Wrap>\n      </Container>\n      <Route path={`${url}/edit`}>\n        <ModalLayer onClick={() => history.goBack()}>\n          <ProfileEditor\n            refreshUserObj={refreshUserObj}\n            userObject={userObject}\n            ssoks={ssoks}\n          />\n        </ModalLayer>\n      </Route>\n    </>\n  );\n};\n\nexport default Profile;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport Ssok from 'components/Ssok/Ssok';\nimport { useParams } from 'react-router-dom';\nimport { dbService } from 'fbase';\nimport styled from 'styled-components';\nimport device from 'styles/deviceSize';\nimport Container from 'components/Container';\nimport tags from 'category';\nimport Header from 'components/Header';\n\nconst ColumnWrap = styled.div`\n  width: 100%;\n`;\n\nconst Wrap = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 15px 10px;\n  ${device.mobile} {\n    width: 80%;\n  }\n  ${device.tablet} {\n    columns: unset;\n    padding: 50px 10px;\n  }\n  ${device.laptop} {\n    width: 100%;\n    column-count: 3;\n    column-gap: 15px;\n  }\n`;\n\nconst ResultSearch = ({ userObject }) => {\n  const [filterData, setFilterData] = useState([]);\n  const { tag } = useParams();\n  const searchCategory = useCallback(async () => {\n    const categorySsok = await dbService\n      .collection('ssok')\n      .where('category', '==', tag)\n      .orderBy('createdAt')\n      .get();\n    const filterArr = categorySsok.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data(),\n    }));\n    setFilterData(filterArr);\n  }, [tag]);\n\n  useEffect(() => {\n    searchCategory();\n  }, [searchCategory]);\n\n  return (\n    <Container>\n      <Header headText={tags[tag]} />\n      <ColumnWrap>\n        <Wrap>\n          {filterData.map((ssok) => (\n            <Ssok\n              key={ssok.id}\n              ssokData={ssok}\n              isOwner={ssok.creatorId === userObject.uid}\n            />\n          ))}\n        </Wrap>\n      </ColumnWrap>\n    </Container>\n  );\n};\n\nexport default ResultSearch;\n","import React from 'react';\nimport Header from 'components/Header';\nimport styled from 'styled-components';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport Container from 'components/Container';\nimport device from 'styles/deviceSize';\nimport tags from 'category';\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 10px 0 60px;\n  ${device.tablet} {\n    height: 100%;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nconst ListWrap = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-template-rows: repeat(auto-fill, minmax(200px, auto));\n  grid-auto-rows: minmax(200px, auto);\n  gap: 10px;\n  width: 90%;\n  margin: 0 auto;\n  ${device.tablet} {\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(2, minmax(200px, auto));\n  }\n`;\n\nconst List = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ListLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  background-color: ${({ theme, category }) => theme.categoryColor[category]};\n  border-radius: 5px;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n  color: #fff;\n  font-family: 'RIDIBatang';\n  font-size: 1.5rem;\n`;\n\nconst Search = () => {\n  const { url } = useRouteMatch();\n  return (\n    <>\n      <Container>\n        <Header headText=\"검색\" />\n        <Content>\n          <ListWrap>\n            {Object.keys(tags).map((tag) => (\n              <List key={tag}>\n                <ListLink\n                  category={tag}\n                  type=\"button\"\n                  to={`${url}/${tag}`}\n                  value={tag}\n                >\n                  {tags[tag]}\n                </ListLink>\n              </List>\n            ))}\n          </ListWrap>\n        </Content>\n      </Container>\n    </>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faHome,\n  faUser,\n  faSearch,\n  faPlus,\n} from '@fortawesome/free-solid-svg-icons';\nimport device, { NavigationResponseWidth } from 'styles/deviceSize';\nimport SettingPop from './Layer/SettingPop';\n\nconst NavWrap = styled.div`\n  display: flex;\n  width: 100%;\n  ${NavigationResponseWidth}\n`;\n\nconst Nav = styled.nav`\n  position: fixed;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  width: inherit;\n  height: 50px;\n  z-index: 99;\n  border-top: 1px solid ${({ theme }) => theme.borderColor};\n  ${device.tablet} {\n    flex-direction: column;\n    background-color: ${({ theme }) => theme.backgroundColor};\n    top: 0;\n    height: 100%;\n    border-top: 0;\n  }\n`;\n\nconst NaviListWrap = styled.ul`\n  /* left: 0; */\n  display: flex;\n  width: inherit;\n  height: 50px;\n  align-items: center;\n  justify-content: space-around;\n  &:after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: ${({ theme }) => theme.backgroundColor};\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n    opacity: 0.8;\n    z-index: -1;\n    backdrop-filter: blur(5px);\n    -webkit-backdrop-filter: blur(5px);\n    content: '';\n  }\n  ${device.tablet} {\n    padding: 30px 0;\n    height: 100%;\n    align-items: flex-start;\n    flex-direction: column;\n    justify-content: flex-start;\n    background: ${({ theme }) => theme.backgroundColor};\n    &:after {\n      display: none;\n    }\n  }\n  ${NavigationResponseWidth}\n`;\n\nconst NaviList = styled.li`\n  position: relative;\n  width: 100%;\n  padding: 0 10px;\n  color: ${({ theme }) => theme.boldColor};\n  transition: all 0.2s;\n  opacity: ${({ selected }) => (selected ? 1 : 0.5)};\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst NaviLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s;\n  padding: 5px 0;\n  &:hover {\n    > div {\n      background-color: ${({ theme }) => theme.lightColor};\n    }\n  }\n`;\n\nconst LinkText = styled.div`\n  display: flex;\n  height: 100%;\n  align-items: center;\n  padding: 10px;\n  border-radius: 20px;\n  font-size: 1.5rem;\n`;\n\nconst NaviText = styled.span`\n  display: none;\n  ${device.laptop} {\n    display: block;\n    font-size: 20px;\n    font-weight: bold;\n    margin: 0 10px;\n  }\n`;\n\nconst ProfileWrap = styled.div`\n  display: none;\n  ${device.tablet} {\n    display: block;\n    width: 100%;\n  }\n`;\n\nconst Navigation = ({ userObject }) => {\n  // const [isOpen, setIsOpen] = useState(false);\n  const { pathname } = useLocation();\n  return (\n    <NavWrap>\n      <Nav>\n        <NaviListWrap>\n          <NaviList selected={pathname === '/'}>\n            <NaviLink to=\"/\">\n              <LinkText>\n                <FontAwesomeIcon icon={faHome} fixedWidth />\n                <NaviText>홈</NaviText>\n              </LinkText>\n            </NaviLink>\n          </NaviList>\n          <NaviList selected={pathname === '/search'}>\n            <NaviLink to=\"/search\">\n              <LinkText>\n                <FontAwesomeIcon icon={faSearch} fixedWidth />\n                <NaviText>글찾기</NaviText>\n              </LinkText>\n            </NaviLink>\n          </NaviList>\n          <NaviList selected={pathname === '/post'}>\n            <NaviLink to=\"/post\">\n              <LinkText>\n                <FontAwesomeIcon icon={faPlus} fixedWidth />\n                <NaviText>글쓰기</NaviText>\n              </LinkText>\n            </NaviLink>\n          </NaviList>\n          <NaviList selected={pathname === '/profile'}>\n            <NaviLink to=\"/profile\">\n              <LinkText>\n                <FontAwesomeIcon icon={faUser} fixedWidth />\n                <NaviText>프로필</NaviText>\n              </LinkText>\n            </NaviLink>\n          </NaviList>\n        </NaviListWrap>\n        <ProfileWrap>\n          <SettingPop position={`bottom: 100%; left: 10px;`}>\n            <NaviText>설정</NaviText>\n          </SettingPop>\n        </ProfileWrap>\n      </Nav>\n    </NavWrap>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Post from 'routes/Post';\nimport Profile from 'routes/Profile';\nimport ResultSearch from 'routes/ResultSearch';\nimport Search from 'routes/Search';\nimport Navigation from './Navigation';\n\nconst AppRouter = ({ isLoggedIn, userObject, refreshUserObj }) => {\n  return (\n    <Router>\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Navigation userObject={userObject} />\n            <Route exact path=\"/\">\n              <Home userObject={userObject} />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile\n                userObject={userObject}\n                refreshUserObj={refreshUserObj}\n              />\n            </Route>\n            <Route exact path=\"/search\">\n              <Search />\n            </Route>\n            <Route path={`/search/:tag`}>\n              <ResultSearch userObject={userObject} />\n            </Route>\n            <Route exact path=\"/post\">\n              <Post userObject={userObject} />\n            </Route>\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\nimport DancingScript from './fonts/DancingScript-SemiBold.ttf';\nimport RIDIBatang from './fonts/RIDIBatang.otf';\n\nexport default createGlobalStyle`\n  ${reset};\n  button {\n    cursor: pointer;\n  }\n  button, input {\n    background: none;\n    border: 0;\n    border-radius: 0;\n    padding: 0;\n    margin: 0;\n  }\n  @font-face {\n    font-family: 'Dancing Script';\n    src: url(${DancingScript});\n  }\n  @font-face {\n    font-family: 'RIDIBatang';\n    src: url(${RIDIBatang});\n  }\n  * {\n    box-sizing: border-box;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\n  }\n  html {\n    font-size: 14px;\n  }\n  body {\n    height: 100vh;\n    background-color: ${({ theme }) => theme.backgroundColor};\n    color: ${({ theme }) => theme.fontColor};\n  }\n  a {\n    text-decoration: none;\n    color: inherit;\n    font-size: inherit;\n  }\n  textarea {\n    padding: 0;\n    margin: 0;\n    border: none;\n  }\n\n`;\n","const categoryColor = {\n  affirmation: '#4e89ae',\n  empathy: '#43658b',\n  lyrics: '#ed6663',\n  quotation: '#ffa372',\n  other: '#d54062',\n};\n\nconst light = {\n  mainColor: (opacity) => `rgba(230, 43, 43, ${opacity})`,\n  backgroundColor: '#fff',\n  cardColor: '#f3f3f3',\n  lightColor: '#eee',\n  borderColor: '#ddd',\n  fontColor: '#444',\n  boldColor: '#000',\n  boxShadow: '0 0 10px 0px rgba(0, 0, 0, 0.2);',\n  categoryColor,\n};\n\nconst dark = {\n  mainColor: (opacity) => `rgba(29,161,242,${opacity})`,\n  backgroundColor: 'rgb(21, 32, 43)',\n  cardColor: 'rgb(25, 39, 52)',\n  lightColor: 'rgb(37, 51, 65)',\n  borderColor: 'rgb(56, 68, 77)',\n  fontColor: '#8899a6',\n  boldColor: '#fff',\n  boxShadow:\n    'rgba(136, 153, 166, 0.2) 0px 0px 15px, rgba(136, 153, 166, 0.15) 0px 0px 3px 1px',\n  categoryColor,\n};\n\nexport default {\n  light,\n  dark,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport device from 'styles/deviceSize';\n\nconst Wrap = styled.div`\n  min-height: 100vh;\n  ${device.tablet} {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n`;\n\nconst RootWrap = ({ children }) => {\n  return <Wrap>{children}</Wrap>;\n};\n\nexport default RootWrap;\n","const themeReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'TOGGLE_DARK_MODE':\n      return {\n        isDark: !state.isDark,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default themeReducer;\n","import React, { useEffect, useReducer, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyles from 'styles/GlobalStyles';\nimport theme from 'styles/theme';\nimport RootWrap from './RootWrap';\nimport themeReducer from 'reducer/themeReducer';\nimport Context from 'context';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObject, setUserObject] = useState(null);\n  const [state, dispatch] = useReducer(themeReducer, {\n    isDark: false,\n  });\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      //onAuthStateChanged는 로그인, 로그아웃, 어플리케이션이 초기화 될 때 발생한다.\n      if (user) {\n        setUserObject({\n          displayName: user.displayName,\n          photoURL: user.photoURL,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObject(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUserObj = () => {\n    // setUserObject(authService.currentUser); authService.currentUser => 안에는 너무 많은 정보가 있기때문에 setState에 담아버리면 변화를 알지 못하므로 필요한 정보만 뽑아서 전달해야 한다.\n    const user = authService.currentUser;\n    setUserObject({\n      displayName: user.displayName,\n      uid: user.uid,\n      photoURL: user.photoURL,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <Context.Provider value={{ state, dispatch }}>\n      <ThemeProvider theme={state.isDark ? theme.dark : theme.light}>\n        <GlobalStyles />\n        {init ? (\n          <RootWrap>\n            <AppRouter\n              isLoggedIn={Boolean(userObject)}\n              userObject={userObject}\n              refreshUserObj={refreshUserObj}\n            />\n          </RootWrap>\n        ) : (\n          'loading...'\n        )}\n      </ThemeProvider>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}